/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistema;

import model.Item;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.List;

/**
 *
 * @author laboratorio
 */
public class Cardapio extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    private JTable tabela;
    
    /**
     * Creates new form Cardapio
     */
    public Cardapio() {
        initComponents();
        tableModel = (DefaultTableModel) tblCardapio.getModel();
        carregarCardapio();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCardapio = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblCardapio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Preco"
            }
        ));
        jScrollPane1.setViewportView(tblCardapio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Método para buscar os itens do cardápio no servidor
    private List<Item> buscarCardapio() {
        List<Item> itens = null;
        
        try {
            // Conecta ao servidor
            Socket socket = new Socket("localhost", 1234);
            
            // Cria streams para comunicação
            ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
            ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
            
            // Envia comando para solicitar o cardápio
            out.writeObject("CARDAPIO");
            out.flush();
            
            // Recebe a lista de itens
            itens = (List<Item>) in.readObject();
            
            // Fecha os recursos
            in.close();
            out.close();
            socket.close();
            
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, 
                    "Erro ao conectar com o servidor: " + e.getMessage(), 
                    "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        }
        
        return itens;
    }

    // Exibe os itens do cardápio na tabela
    private void exibirItensNaTabela(List<Item> itens) {
        // Limpa a tabela
        tableModel.setRowCount(0);
        
        if (itens != null) {
            for (Item item : itens) {
                Object[] linha = {
                    item.getNome(),
                    String.format("R$ %.2f", item.getPreco())
                };
                tableModel.addRow(linha);
            }
            
            // Seleciona o primeiro item, se houver
            if (tableModel.getRowCount() > 0) {
                tblCardapio.setRowSelectionInterval(0, 0);
            }
        }
    }

    // Carregar dados do cardápio ao abrir a janela
    private void carregarCardapio() {
        SwingWorker<List<Item>, Void> worker = new SwingWorker<List<Item>, Void>() {
            @Override
            protected List<Item> doInBackground() throws Exception {
                return buscarCardapio();
            }

            @Override
            protected void done() {
                try {
                    List<Item> itens = get();
                    exibirItensNaTabela(itens);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(Cardapio.this, 
                            "Erro ao carregar cardápio: " + e.getMessage(), 
                            "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        };
        
        worker.execute();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Cardapio form = new Cardapio();
                form.setVisible(true);
                form.carregarCardapio();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCardapio;
    // End of variables declaration//GEN-END:variables
}
